plugins {
    id "org.springframework.boot" version "2.3.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "java"
    id "idea"
    id "maven-publish"
}

group "build.dream"
version "0.1.0"

if (project.hasProperty("release")) {
    version = version + "-RELEASE"
} else {
    version = version + "-SNAPSHOT"
}

repositories {
    mavenLocal()
    maven { url "${mavenPublicRepositoryUrl}" }
}

ext {
    set("springCloudVersion", "Hoxton.SR6")
    set("projectName", "lib-common")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security.oauth:spring-security-oauth2:2.3.2.RELEASE"
    implementation "org.springframework.cloud:spring-cloud-starter-hystrix:1.4.7.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch"
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
    implementation "com.google.code.gson:gson:2.8.0"
    implementation "com.google.zxing:javase:3.3.3"
//    implementation "commons-codec:commons-codec:1.10"
    implementation "org.apache.commons:commons-compress:1.18"
    implementation "dom4j:dom4j:1.6.1"
    implementation "redis.clients:jedis:2.9.0"
    implementation "net.sf.json-lib:json-lib:2.4:jdk15"
    implementation "com.networknt:json-schema-validator:0.1.13"
    implementation "com.belerweb:pinyin4j:2.5.1"
    implementation "org.springframework.kafka:spring-kafka:2.1.5.RELEASE"
    implementation "com.alibaba:fastjson:1.2.49"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-activemq"
    implementation "com.jcraft:jsch:0.1.54"
    implementation "org.quartz-scheduler:quartz:2.3.0"
    implementation "org.jsoup:jsoup:1.11.2"
//    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:7.1.0"
//    implementation "org.elasticsearch:elasticsearch:7.1.0"
//    implementation "org.apache.commons:commons-math3:3.6.1"
//    implementation "org.aspectj:aspectjweaver:1.9.2"
    implementation "commons-io:commons-io:2.6"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0"
    implementation "mysql:mysql-connector-java:6.0.6"
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0"
    implementation "com.aliyun.openservices:ons-client:1.8.2.Final"
    implementation "com.aliyun.oss:aliyun-sdk-oss:3.8.0"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.3.1"
    implementation "org.apache.curator:curator-framework:5.0.0"
    implementation "org.hibernate:hibernate-validator:7.0.0.Alpha4"
}

task makeJar(type: Jar) {
    baseName "${projectName}"
    from("build/classes/java/main", "build/classes/scala/main", "build/resources/main")
    exclude("build/dream/common/Application.class", "application.properties", "logback.xml", "development.properties")
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
    exclude("build/dream/common/Application.java", "application.properties", "logback.xml", "development.properties")
}

makeJar.dependsOn(classes)

publishing {
    repositories {
        if (project.hasProperty("release")) {
            maven {
                url "${mavenReleasesRepositoryUrl}"
                credentials {
                    username = "${nexusUserName}"
                    password = "${nexusPassword}"
                }
            }
        } else {
            maven {
                url "${mavenSnapshotsRepositoryUrl}"
                credentials {
                    username = "${nexusUserName}"
                    password = "${nexusPassword}"
                }
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifacts = [makeJar, sourceJar]

            groupId group
            version version
            artifactId projectName
        }
    }
}
